// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("user")
  country       String?
  language      String    @default("en")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  posts    Post[]
  comments Comment[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String   @db.Text
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  comments Comment[]
  tags     Tag[]
}

model Comment {
  id        String   @id @default(cuid())
  content   String   @db.Text
  authorId  String
  postId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author User @relation(fields: [authorId], references: [id], onDelete: Cascade)
  post   Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Tag {
  id    String @id @default(cuid())
  name  String @unique
  color String @default("#3B82F6")

  posts Post[]
}

// Agricultural Intelligence Models
model WeatherData {
  id          String   @id @default(cuid())
  location    String
  temperature Float
  humidity    Float
  rainfall    Float
  windSpeed   Float
  conditions  String
  date        DateTime
  createdAt   DateTime @default(now())
}

model CropRecommendation {
  id          String   @id @default(cuid())
  location    String
  season      String
  soilType    String
  crops       Json     // Array of recommended crops
  createdAt   DateTime @default(now())
}

model MarketPrice {
  id        String   @id @default(cuid())
  commodity String
  country   String
  price     Float
  currency  String
  date      DateTime
  createdAt DateTime @default(now())
}

// Trade and Logistics Models
model TradeRoute {
  id          String   @id @default(cuid())
  origin      String
  destination String
  distance    Float
  duration    Int      // in hours
  cost        Float
  mode        String   // road, rail, air, sea
  createdAt   DateTime @default(now())
}

model CustomsRegulation {
  id              String   @id @default(cuid())
  originCountry   String
  destinationCountry String
  commodity       String
  regulations     Json     // Array of regulations
  requirements    Json     // Array of requirements
  createdAt       DateTime @default(now())
}

// Cultural Preservation Models
model Language {
  id          String   @id @default(cuid())
  name        String
  code        String   @unique
  region      String
  speakers    Int
  status      String   // endangered, stable, growing
  createdAt   DateTime @default(now())
}

model CulturalPractice {
  id          String   @id @default(cuid())
  name        String
  country      String
  region      String
  description String   @db.Text
  significance String @db.Text
  createdAt   DateTime @default(now())
}

// Financial Inclusion Models
model MobileMoneyProvider {
  id          String   @id @default(cuid())
  name        String
  country     String
  services    Json     // Array of services
  fees        Json     // Fee structure
  limits      Json     // Transaction limits
  createdAt   DateTime @default(now())
}

model BankingService {
  id          String   @id @default(cuid())
  bankName   String
  country    String
  services   Json     // Array of services
  fees       Json     // Fee structure
  requirements Json   // Requirements
  createdAt  DateTime @default(now())
}
